{"version":3,"sources":["routes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["Toaster","React","lazy","Tables","Breadcrumbs","Cards","Carousels","Collapses","BasicForms","Jumbotrons","ListGroups","Navbars","Navs","Paginations","Popovers","ProgressBar","Switches","Tabs","Tooltips","BrandButtons","ButtonDropdowns","ButtonGroups","Buttons","Charts","Dashboard","FormA","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Colors","routes","path","exact","name","component","loading","className","memo","fluid","fallback","map","route","idx","key","render","props","from","to","fixed","href","target","rel","TheHeader","useDispatch","useSelector","state","sidebarShow","style","backgroundColor","withSubheader","height","alt","onClick","fireAuth","signOut","then","console","log","catch","error","bind","size","color","dispatch","show","minimize","onShowChange","val","type","src","width","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/27.f6f0eab8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\r\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'));\r\n\r\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\r\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'));\r\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\r\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\r\nconst BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\r\n\r\nconst Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\r\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\r\nconst Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\r\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'));\r\nconst Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\r\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\r\nconst ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\r\nconst Switches = React.lazy(() => import('./views/base/switches/Switches'));\r\n\r\nconst Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\r\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\r\nconst BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\r\nconst ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\r\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\r\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\r\nconst Charts = React.lazy(() => import('./views/charts/Charts'));\r\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\r\nconst FormA = React.lazy(() => import('./views/dashboard/forma.js'));\r\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\r\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'));\r\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'));\r\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\r\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\r\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\r\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'));\r\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'));\r\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'));\r\nconst Users = React.lazy(() => import('./views/users/Users'));\r\nconst User = React.lazy(() => import('./views/users/User'));\r\n\r\nconst routes = [\r\n  { path: '/', exact: true, name: 'Home' },\r\n  { path: '/helpkapal/form', name: 'Form Input', component: FormA },\r\n  { path: '/helpkapal', name: 'Helpdesk Kapal', component: Dashboard },\r\n  { path: '/theme', name: 'Theme', component: Colors, exact: true },\r\n  { path: '/theme/colors', name: 'Colors', component: Colors },\r\n  { path: '/theme/typography', name: 'Typography', component: Typography },\r\n  { path: '/base', name: 'Base', component: Cards, exact: true },\r\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\r\n  { path: '/base/cards', name: 'Cards', component: Cards },\r\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\r\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\r\n  { path: '/base/forms', name: 'Forms', component: BasicForms },\r\n  { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\r\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\r\n  { path: '/base/navbars', name: 'Navbars', component: Navbars },\r\n  { path: '/base/navs', name: 'Navs', component: Navs },\r\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\r\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\r\n  { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\r\n  { path: '/base/switches', name: 'Switches', component: Switches },\r\n  { path: '/base/tables', name: 'Tables', component: Tables },\r\n  { path: '/base/tabs', name: 'Tabs', component: Tabs },\r\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\r\n  { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\r\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\r\n  { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\r\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\r\n  { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\r\n  { path: '/charts', name: 'Charts', component: Charts },\r\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\r\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\r\n  { path: '/icons/flags', name: 'Flags', component: Flags },\r\n  { path: '/icons/brands', name: 'Brands', component: Brands },\r\n  { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\r\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\r\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\r\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\r\n  { path: '/notifications/toaster', name: 'Toaster', component: Toaster },\r\n  { path: '/widgets', name: 'Widgets', component: Widgets },\r\n  { path: '/users', exact: true,  name: 'Users', component: Users },\r\n  { path: '/users/:id', exact: true, name: 'User Details', component: User }\r\n];\r\n\r\nexport default routes;\r\n","import React, { Suspense } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport { CContainer, CFade } from '@coreui/react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n  \r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst TheContent = () => {\r\n  return (\r\n    <main className=\"c-main\">\r\n      <CContainer fluid>\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <CFade>\r\n                      <route.component {...props} />\r\n                    </CFade>\r\n                  )} />\r\n              )\r\n            })}\r\n            <Redirect from=\"/\" to=\"/helpkapal\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheContent)\r\n","import React from 'react'\r\nimport { CFooter } from '@coreui/react'\r\n\r\nconst TheFooter = () => {\r\n  return (\r\n    <CFooter fixed={false}>\r\n      <div>\r\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI</a>\r\n        <span className=\"ml-1\">&copy; 2020 creativeLabs.</span>\r\n      </div>\r\n      <div className=\"mfs-auto\">\r\n        <span className=\"mr-1\">Powered by</span>\r\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\r\n      </div>\r\n    </CFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheFooter)\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fireAuth } from \"../fireApi\";\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CButton,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CLink\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n\r\nimport { \r\n  TheHeaderDropdown,\r\n  TheHeaderDropdownMssg,\r\n  TheHeaderDropdownNotif,\r\n  TheHeaderDropdownTasks\r\n}  from './index'\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch()\r\n  const sidebarShow = useSelector(state => state.sidebarShow)\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n    dispatch({type: 'set', sidebarShow: val})\r\n  }\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n    dispatch({type: 'set', sidebarShow: val})\r\n  }\r\n  const logOut = () => fireAuth.signOut().then(function() {\r\n    console.log(\"sukses logout\")\r\n  }).catch(function(error) {\r\n    console.log(error)\r\n  });\r\n\r\n  return (\r\n    <CHeader style={{backgroundColor: \"#02275d\"}} withSubheader>\r\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\r\n      </CHeaderBrand>\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n      {/* <TheHeaderDropdownNotif/>\r\n        <TheHeaderDropdownTasks/>\r\n        <TheHeaderDropdownMssg/>\r\n        <TheHeaderDropdown/> */}\r\n        <CButton onClick={logOut.bind(this)} size=\"sm\" color=\"danger\">Logout</CButton>\r\n      </CHeaderNav>\r\n\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n        <CBreadcrumbRouter \r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \r\n          routes={routes} \r\n        />\r\n      </CSubheader>\r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default TheHeader\r\n","import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nexport default [\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Dashboard',\r\n  //   to: '/dashboard',\r\n  //   icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\r\n  //   badge: {\r\n  //     color: 'info',\r\n  //     text: 'NEW',\r\n  //   }\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Theme']\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Colors',\r\n  //   to: '/theme/colors',\r\n  //   icon: 'cil-drop',\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Typography',\r\n  //   to: '/theme/typography',\r\n  //   icon: 'cil-pencil',\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Components']\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Base',\r\n  //   route: '/base',\r\n  //   icon: 'cil-puzzle',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Breadcrumb',\r\n  //       to: '/base/breadcrumbs',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Cards',\r\n  //       to: '/base/cards',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Carousel',\r\n  //       to: '/base/carousels',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Collapse',\r\n  //       to: '/base/collapses',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Forms',\r\n  //       to: '/base/forms',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Jumbotron',\r\n  //       to: '/base/jumbotrons',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'List group',\r\n  //       to: '/base/list-groups',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Navs',\r\n  //       to: '/base/navs',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Navbars',\r\n  //       to: '/base/navbars',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Pagination',\r\n  //       to: '/base/paginations',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Popovers',\r\n  //       to: '/base/popovers',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Progress',\r\n  //       to: '/base/progress-bar',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Switches',\r\n  //       to: '/base/switches',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Tables',\r\n  //       to: '/base/tables',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Tabs',\r\n  //       to: '/base/tabs',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Tooltips',\r\n  //       to: '/base/tooltips',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Buttons',\r\n  //   route: '/buttons',\r\n  //   icon: 'cil-cursor',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Buttons',\r\n  //       to: '/buttons/buttons',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Brand buttons',\r\n  //       to: '/buttons/brand-buttons',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Buttons groups',\r\n  //       to: '/buttons/button-groups',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Dropdowns',\r\n  //       to: '/buttons/button-dropdowns',\r\n  //     }\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Charts',\r\n  //   to: '/charts',\r\n  //   icon: 'cil-chart-pie'\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Icons',\r\n  //   route: '/icons',\r\n  //   icon: 'cil-star',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'CoreUI Free',\r\n  //       to: '/icons/coreui-icons',\r\n  //       badge: {\r\n  //         color: 'success',\r\n  //         text: 'NEW',\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'CoreUI Flags',\r\n  //       to: '/icons/flags',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'CoreUI Brands',\r\n  //       to: '/icons/brands',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Notifications',\r\n  //   route: '/notifications',\r\n  //   icon: 'cil-bell',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Alerts',\r\n  //       to: '/notifications/alerts',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Badges',\r\n  //       to: '/notifications/badges',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Modal',\r\n  //       to: '/notifications/modals',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Toaster',\r\n  //       to: '/notifications/toaster'\r\n  //     }\r\n  //   ]\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Widgets',\r\n  //   to: '/widgets',\r\n  //   icon: 'cil-calculator',\r\n  //   badge: {\r\n  //     color: 'info',\r\n  //     text: 'NEW',\r\n  //   },\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDivider'\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Extras'],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDropdown',\r\n  //   name: 'Pages',\r\n  //   route: '/pages',\r\n  //   icon: 'cil-star',\r\n  //   _children: [\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Login',\r\n  //       to: '/login',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Register',\r\n  //       to: '/register',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Error 404',\r\n  //       to: '/404',\r\n  //     },\r\n  //     {\r\n  //       _tag: 'CSidebarNavItem',\r\n  //       name: 'Error 500',\r\n  //       to: '/500',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Disabled',\r\n  //   icon: 'cil-ban',\r\n  //   badge: {\r\n  //     color: 'secondary',\r\n  //     text: 'NEW',\r\n  //   },\r\n  //   addLinkClass: 'c-disabled',\r\n  //   'disabled': true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDivider',\r\n  //   className: 'm-2'\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavTitle',\r\n  //   _children: ['Labels']\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Label danger',\r\n  //   to: '',\r\n  //   icon: {\r\n  //     name: 'cil-star',\r\n  //     className: 'text-danger'\r\n  //   },\r\n  //   label: true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Label info',\r\n  //   to: '',\r\n  //   icon: {\r\n  //     name: 'cil-star',\r\n  //     className: 'text-info'\r\n  //   },\r\n  //   label: true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavItem',\r\n  //   name: 'Label warning',\r\n  //   to: '',\r\n  //   icon: {\r\n  //     name: 'cil-star',\r\n  //     className: 'text-warning'\r\n  //   },\r\n  //   label: true\r\n  // },\r\n  // {\r\n  //   _tag: 'CSidebarNavDivider',\r\n  //   className: 'm-2'\r\n  // }\r\n]\r\n\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CImg,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// sidebar nav config\r\nimport navigation from './_nav'\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const show = useSelector(state => state.sidebarShow)\r\n\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      minimize\r\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\r\n    >\r\n      <CSidebarBrand style={{backgroundColor: \"#02275d\"}} className=\"d-md-down-none\" to=\"/\">\r\n        <CImg\r\n          className=\"c-sidebar-brand-full\"\r\n          src=\"https://intr.insw.go.id/img/content/INSW%20Logo.png\"\r\n          width=\"50%\"\r\n        />\r\n        <CImg\r\n          className=\"c-sidebar-brand-minimized\"\r\n          src=\"https://intr.insw.go.id/img/content/INSW%20Logo.png\"\r\n          width=\"80%\"\r\n        />\r\n      </CSidebarBrand>\r\n      <CSidebarNav>\r\n\r\n        <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle\r\n          }}\r\n        />\r\n      </CSidebarNav>\r\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheSidebar)\r\n","import React from 'react'\r\nimport {\r\n  TheContent,\r\n  TheSidebar,\r\n  TheFooter,\r\n  TheHeader\r\n} from './index'\r\nimport {\r\n  CButton,\r\n} from '@coreui/react'\r\n\r\nconst TheLayout = () => {\r\n\r\n  return (\r\n    <>    \r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar/>\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader/>\r\n        <div className=\"c-body\">\r\n          <TheContent/>\r\n        </div>\r\n        <TheFooter/>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TheLayout\r\n"],"sourceRoot":""}